<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.todo.model.mapper.TodoMapper">
	<!-- Mapper 인터페이스 경로 작성(필수로 작성!!!)
		패키지경로를 포함한 전체 이름으로 작성 -->
	
	<!-- 아래 태그는 mapper.xml 파일 생성하자마자 삭제하자! -->
	<!-- <cache-ref namespace=""/>  -->
	
	<!-- 태그로 SQL 구문 작성 (세미콜론 제외!!) -->
	<!-- resultType에 MyBatis 타입을 써줘야 함!! -->
	<select id="testTitle" resultType="string">
		SELECT TODO_TITLE FROM TB_TODO
		WHERE TODO_NO = 1 
	</select>
	
	<!-- <select> 태그의 속성
	
		- id 속성 : 태그를 식별하는 값 (연결된 Mapper의 메서드 명과 동일하게 작성)
		
		- resultType : 조회 결과 한 줄(1행)을 저장하여 반환할 변수/객체 자료형 지정
		  조회 결과가 여러 행이면 행 별로 변수/객체 자료형으로 저장 후
		  모아서 List 로 반환
		
		(필드명 == 컬럼명 : 조회 결과가 자동으로 객체의 필드에 세팅)
		  
	 -->
	
	<!-- 할 일 목록 조회 
		resultType="edu.kh.todo.model.dto.Todo" 대신 Todo 만 써도 됨!
		왜? DBConfig.java에서 SqlSessionFactory메서드에서 별칭 지정(세팅2)함!
		    (edu.kh.todo 패키지 이하는 모두 클래스명으로 별칭등록해둠) 
	-->
	<select id="selectAll" resultType="Todo" >
		SELECT 
			TODO_NO,
			TODO_TITLE,
			COMPLETE,
			TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') "REG_DATE" 
		FROM TB_TODO
		ORDER BY TODO_NO
	</select>
	
	<!-- 완료된 할 일 개수 조회 -->
	<select id="getCompleteCount" resultType="_int">
		SELECT COUNT(*)
		FROM TB_TODO
		WHERE COMPLETE = 'Y'
	</select>
	
	<!-- mapper.xml 에서 java data (파라미터) 를 SQL에 삽입하는 방법
		1) #{변수명 | 필드명} : SQL에 삽입 시 양쪽에 ''(홑따옴표) 붙여서 삽입
		
		ex) MEMEBER_EMAIL = #{memberEmail} -> 'member01@naver.com'
		
		======================================================================
		
		2) ${변수명 | 필드명} : SQL에 삽입 시 양쪽에 '' 붙이지 않고 삽입
		
		ex) MEMEBER_EMAIL = ${memberEmail} -> member01@naver.com (오류 발생)
		
		${} 언제 사용할까?
		- 삽입할 값이 숫자인 경우
		- SQL 자체가 변해야 하는 경우
		  ex) SELECT MEMBER_NICKNAME, ${key} FROM "MEMBER"
		  -> ${key} == ENROLL_DATE 인 경우
		  -> ${key} == MEMBER_ADDRESS 인 경우
	 -->
	
	<!-- parameterType : 전달받은 값(전달 인자)의 타입을 명시
		-> DTO/Map 인 경우 필드명/key를 입력해서 하나씩 꺼내사용할 수 있음
		(원래 edu.kh.todo.model.dto.Todo -> Todo 만 써도 됨!)
		
		- result 값이 성공한 행의 개수여서 resultType가 필수가 아님!
	-->
	<!-- 할 일 추가 -->
	<insert id="addTodo" parameterType="edu.kh.todo.model.dto.Todo">
		INSERT INTO TB_TODO
		VALUES(SEQ_TODO_NO.NEXTVAL, #{todoTitle}, #{todoContent}, DEFAULT, DEFAULT)
	</insert>
	
	<!-- 할 일 상세조회 -->
	<!-- parameterType와 resultType을 안 적어도 알아서 담아서 보내줌
		그러나 명시적으로 작성하는 것을 권장함(코드의 가독성)
	 -->
	<select id="todoDetail" parameterType="_int" resultType="Todo">
		SELECT 
			TODO_NO,
			TODO_TITLE,
			TODO_CONTENT,
			COMPLETE,
			TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') "REG_DATE" 
		FROM TB_TODO
		WHERE TODO_NO = ${todoNo}
		<!-- #{}, ${} 모두 가능 -> 문자열에 숫자만있으면 자동으로 바꿔 줌 
			#{}에 홑따옴표 붙음
		-->
	</select>
	
	<!-- 완료 여부 변경 -->
	<update id="changeComplete" parameterType="Todo">
		UPDATE TB_TODO
		SET COMPLETE = #{complete}
		WHERE TODO_NO = #{todoNo}
	</update>
	
	<!-- 할 일 수정 -->
	<update id="updateTodo" parameterType="Todo">
		UPDATE TB_TODO
		SET TODO_TITLE = #{todoTitle}, TODO_CONTENT = #{todoContent}
		WHERE TODO_NO = #{todoNo}
	</update>
	
	<!-- 할 일 삭제 -->
	<delete id="deleteTodo" parameterType="_int">
		DELETE FROM TB_TODO
		WHERE TODO_NO = ${todoNo}
	</delete>
</mapper>
